---
name: ci

on:
  push:
    tags:
      - v*

env:
  NODE_VERSION: 22.x

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      -
        uses: actions/checkout@v4
      -
        name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      -
        name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      -
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-
      -
        name: Install dependencies
        run: yarn install --immutable
      -
        name: Build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: |
          PUBLIC_URL="/public" yarn build
          tar -czf dist-topaz-console-${{ github.ref_name }}.tar.gz dist
      -
        name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: "dist-topaz-console-${{ github.ref_name }}.tar.gz"
          draft: false
          prerelease: false

  # Uncomment after go-topaz-ui is updated to fetch releases from topaz-console
  # trigger:
  #   runs-on: ubuntu-latest
  #   needs: release
  #   steps:
  #     -
  #       name: Read Configuration
  #       uses: hashicorp/vault-action@v3
  #       id: vault
  #       with:
  #         url: https://vault.eng.aserto.com/
  #         token: ${{ secrets.VAULT_TOKEN }}
  #         secrets: |
  #             kv/data/github  "READ_WRITE_TOKEN"    | READ_WRITE_TOKEN;
  #     -
  #       name: Update go-topaz-ui
  #       run: |
  #         curl -XPOST -H "Authorization: token ${READ_WRITE_TOKEN}" \
  #         --fail-with-body \
  #         -H "Accept: application/vnd.github.everest-preview+json" \
  #         -H "Content-Type: application/json" \
  #         https://api.github.com/repos/aserto-dev/go-topaz-ui/actions/workflows/update.yaml/dispatches \
  #         --data '{"ref": "main", "inputs": {"version": "${{ github.ref_name }}" }}'

  bump_version:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: write
    steps:
      -
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.CODEGEN_APP_ID }}
          private-key: ${{ secrets.CODEGEN_APP_KEY }}
      -
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: 'main'
      # bump to the next patch version
      -
        name: Bump version
        id: bump_version
        run: |
          VERSION=$(npm version patch --no-git-tag-version)
          echo $VERSION
          echo "next_version=$VERSION" >> $GITHUB_ENV
      -
        name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'Bump to ${{ steps.bump_version.outputs.next_version }} (CI)'
          add: 'package.json'
